#####################################################################
# Edit util
#####################################################################
[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = ['<Plug>(EasyAlign)']
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
on_map = [
    '<Plug>(asterisk-z*)',
    '<Plug>(asterisk-z#)',
    '<Plug>(asterisk-gz*)',
    '<Plug>(asterisk-gz#)',
]
hook_add = '''
    map *  <Plug>(asterisk-z*)
    map #  <Plug>(asterisk-z#)
    map g* <Plug>(asterisk-gz*)
    map g# <Plug>(asterisk-gz#)
'''

# [[plugins]]
# repo = 'Yggdroot/indentLine'
# on_cmd = ['IndentLinesToggle']
# hook_add = '''
#     let g:loaded_indentLine = 1
#     nnoremap <Space>i <C-u>:IndentLinesToggle<CR>
# '''

[[plugins]]
repo = 'mattn/vim-sqlfmt'
on_ft = ['sql']
on_map = ['<Plug>(sqlfmt)']
on_cmd = ['SQLFmt']
hook_add = '''
" Install command `pip install sqlparse`
let sqlfmt_bin = fnamemodify(g:python3_host_prog, ':h') . '/'. 'sqlformat'
let g:sqlfmt_program = sqlfmt_bin . ' -r -k upper -o %s -'
'''

#####################################################################
# Programing util
#####################################################################
[[plugins]]
repo = 'tyru/caw.vim'
on_map = ['<Plug>(caw:hatpos:toggle)', '<Plug>(caw:zeropos:toggle)']
hook_add = '''
    " Add comment to beginning line(consider whitespace)
    nmap <Leader>c <Plug>(caw:hatpos:toggle)
    vmap <Leader>c <Plug>(caw:hatpos:toggle)
    " Add comment to beginning line(ignore whitespace)
    nmap <Leader>, <Plug>(caw:zeropos:toggle)
    vmap <Leader>, <Plug>(caw:zeropos:toggle)
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
depends = ['vimproc.vim']
hook_add = '''
    nnoremap <Leader>r :<C-U>QuickRun<CR>
    xnoremap <Leader>r gv:<C-U>QuickRun<CR>
'''
hook_source = 'source ~/.vim/rc/plugins/vimquickrun.rc.vim'

[[plugins]]
repo = 'w0rp/ale'
on_ft = [
    # 'go',
    # 'python',
    'javascript',
    'html',
    'css',
    'markdown',
    'make',
    'vim',
    'terraform',
    'zsh',
    'sh',
    'ansible',
    'json',
]
hook_source = 'source ~/.vim/rc/plugins/ale.rc.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd = ['Vista']
hook_add = '''
    nnoremap <silent> <Leader>o :<C-u>Vista!!<CR>
    let g:vista_sidebar_width = 40
    let g:vista_echo_cursor = 0
    " let g:vista_executive_for = {
    "    \ 'go': 'lcn',
    "    \ 'python': 'lcn',
    "    \ }
'''

[[plugins]]
repo = 'rhysd/reply.vim'
on_cmd = ['Repl', 'ReplAuto']

#####################################################################
# Fuzzy Finder
#####################################################################
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
on_cmd = [
    'Files',
    'Buffers',
    'BLines',
    'Tags',
    'BTags',
    'GFiles',
]
hook_add = '''
" Key Mapping Prefix key
nmap [fuzzyf] <Nop>
map <C-j> [fuzzyf]

let g:fzf_action = {
    \ 'ctrl-o': 'tab split',
    \ 'ctrl-x': 'split',
    \ 'ctrl-v': 'vsplit'
    \ }

let g:fzf_colors = {
    \ 'fg':      ['fg', 'Normal'],
    \ 'hl':      ['fg', 'Comment'],
    \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
    \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
    \ 'hl+':     ['fg', 'Statement'],
    \ 'info':    ['fg', 'PreProc'],
    \ 'border':  ['fg', 'Ignore'],
    \ 'prompt':  ['fg', 'Conditional'],
    \ 'pointer': ['fg', 'Exception'],
    \ 'marker':  ['fg', 'Keyword'],
    \ 'spinner': ['fg', 'Label'],
    \ 'header':  ['fg', 'Comment']
    \ }

let g:fzf_layout = {}

nnoremap <silent> [fuzzyf]<C-p> :<C-u>Files<CR>
nnoremap <silent> [fuzzyf]<C-b> :<C-u>Buffers<CR>
nnoremap <silent> [fuzzyf]<C-l> :<C-u>BLines<CR>
nnoremap <silent> [fuzzyf]<C-]> :<C-u>Tags<CR>
nnoremap <silent> [fuzzyf]<C-o> :<C-u>BTags<CR>
nnoremap <silent> [fuzzyf]<C-g> :<C-u>GFiles?<CR>
'''
hook_source = 'source ~/.vim/rc/plugins/fzf.rc.vim'

#####################################################################
# Other Util
#####################################################################
[[plugins]]
repo = 'kannokanno/previm'
depends = ['open-browser.vim']
on_cmd = ['PrevimOpen']
hook_add = '''
    nnoremap <leader>p :PrevimOpen<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'iberianpig/tig-explorer.vim'
on_cmd = [
    'Tig',
    'TigOpenProjectRootDir',
    'TigOpenCurrentFile',
    'TigBlame',
]
hook_add = '''
    nnoremap <silent> <Leader>j :<C-u>TigOpenProjectRootDir<CR>
    nnoremap <silent> <Leader>k :<C-u>TigOpenCurrentFile<CR>
    nnoremap <silent> <Leader>l :<C-u>TigBlame<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = ['<Plug>(openbrowser-smart-search)']
hook_add = '''
    let g:netrw_nogx = 1 " disable netrw's gx mapping.
    nmap <Leader>b <Plug>(openbrowser-smart-search)
    vmap <Leader>b <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'lighttiger2505/liary.vim'
on_cmd = [
    'Liary',
    'LiarySplit',
    'LiaryVSplit',
    'LiaryTab',
]

[[plugins]]
repo = 'rhysd/vim-grammarous'
on_cmd = ['GrammarousCheck']
